<resources>
    <string name="app_name">Kisaan Shop</string>

    <!-- Circular shape style for ShapeableImageView -->
    <style name="CircleImageView" parent="">
        <item name="shapeAppearanceOverlay">@style/CircleShapeAppearance</item>
    </style>

    <style name="CircleShapeAppearance" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">50%</item>
    </style>

    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="large_text">

        <b>"Wheat\n"</b>
        "Wheat thrives in well-drained loamy or clay loam soils with a pH of 6.0-7.5, requiring high levels of nitrogen, phosphorus, and potassium for optimal growth.\n\n"

        "Corn\n"
        "Corn grows best in well-drained loamy soils with a pH of 5.8-7.0 and requires high amounts of nitrogen to support its development.\n\n"

        "Bajra\n"
        "Bajra is adaptable to a range of soils but prefers sandy loam or light loamy soils with good drainage and a pH of 5.5-7.5. It is drought-resistant and does well in less fertile soils.\n\n"

        "Rice\n"
        "Rice thrives in clayey soils with good water-holding capacity, slightly acidic to neutral pH (5.5-7.5), and benefits from high levels of nitrogen, phosphorus, and potassium.\n\n"

        "Cotton\n"
        "Cotton can tolerate various soil types but performs best in sandy loam to clay loam soils with a pH of 5.8-7.5, requiring adequate nitrogen, phosphorus, and potassium.\n\n"

        "SugarCane\n"
        "Sugarcane grows optimally in deep, well-drained loamy soils with a pH of 5.5-7.5, needing high nitrogen and potassium for vigorous growth.\n\n\n\n\n"





        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
</resources>